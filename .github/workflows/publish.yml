name: Publish

on:
  push:
    tags:
      - '*.*.*'

env:
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Disable telemetry message
  DOTNET_NOLOGO: true
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Do not extract XML documentation files from nuget packages
  NUGET_XMLDOC_MODE: skip
  NUGET_SOURCE: 'https://api.nuget.org/v3/index.json'
  PROJECT_CONFIGURATION: Release
  PROJECT_PATH: ./src/PhoneNumbers/PhoneNumbers.csproj
  RELEASE_VERSION: '0.0.0'

jobs:
  build:
    name: Publish
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Set release version from tag name
      run: echo "RELEASE_VERSION=$(echo ${GITHUB_REF:10})" >> $GITHUB_ENV

    - name: update project version value to release version
      run: |
        $xml = [xml](Get-Content '${{ env.PROJECT_PATH }}')
        $xml.SelectNodes("//Project/PropertyGroup[1]/Version") | % {
          $_."#text" = $_."#text".Replace("1.0.0", "${{ env.RELEASE_VERSION }}")
        }

        $xml.Save('${{ env.PROJECT_PATH }}')
      shell: pwsh

    - name: dotnet restore
      run: dotnet restore

    - name: dotnet build
      run: dotnet build --configuration ${{ env.PROJECT_CONFIGURATION }} --no-restore

    - name: dotnet test
      run: dotnet test --no-restore --verbosity minimal

    - name: dotnet pack
      run: dotnet pack --no-build --configuration ${{ env.PROJECT_CONFIGURATION }}

    - name: dotnet nuget push
      run: dotnet nuget push '/home/runner/work/**/*.nupkg' --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ env.NUGET_SOURCE }}
